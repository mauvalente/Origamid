{"version":3,"sources":["Components/User/UseStatsGraphs.module.css","Components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","React","useState","graph","setGraph","total","setTotal","useEffect","length","graphData","map","item","x","title","y","Number","acessos","reduce","a","b","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,UAAY,kCAAkC,MAAQ,gC,uHCsD/FC,UAnDS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACtB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,IAAMC,SAAS,GAAzC,mBAAOG,EAAP,KAAcC,EAAd,KAkBA,OAhBAL,IAAMM,WAAU,WAEZ,GAAIP,EAAKQ,OAAS,EAAG,CACjB,IAAMC,EAAYT,EAAKU,KAAI,SAAAC,GACvB,MAAO,CACHC,EAAGD,EAAKE,MACRC,EAAGC,OAAOJ,EAAKK,aAIvBV,EAASN,EAAKU,KAAK,gBAAGM,EAAH,EAAGA,QAAH,OAAiBD,OAAOC,MAAWC,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAIC,MAC1Ef,EAASK,MAGd,CAACT,IAGA,0BAASoB,UAAS,oBAAeC,IAAOlB,OAAxC,UACI,qBAAKiB,UAAS,UAAKC,IAAOhB,MAAZ,YAAqBgB,IAAOC,WAA1C,SACI,yCAAYjB,OAEhB,qBAAKe,UAAWC,IAAOC,UAAvB,SACI,cAAC,IAAD,CAAYtB,KAAMG,EAAOoB,YAAa,GAClCC,QAAS,CAACC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IAChDC,MAAO,CACH7B,KAAM,CACF8B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEjBC,OAAQ,CACJC,SAAU,GACVC,KAAM,aAMtB,qBAAKf,UAAWC,IAAOC,UAAvB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAYc,UAAU,QAAQpC,KAAMG","file":"static/js/4.12140a28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UseStatsGraphs_graph__3pXXG\",\"graphItem\":\"UseStatsGraphs_graphItem__3BhFg\",\"total\":\"UseStatsGraphs_total__39CVh\"};","import React from 'react';\nimport styles from './UseStatsGraphs.module.css';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\n\nconst UserStatsGraphs = ({data}) => {\n    const [graph, setGraph] = React.useState([]);\n    const [total, setTotal] = React.useState(0);\n\n    React.useEffect(() => {\n        \n        if (data.length > 0) {\n            const graphData = data.map(item => {\n                return {\n                    x: item.title,\n                    y: Number(item.acessos),\n                }\n            });\n\n            setTotal(data.map( ({ acessos }) => Number(acessos) ).reduce((a,b) => a + b))\n            setGraph(graphData);\n        }\n        \n    }, [data]);\n\n    return (\n        <section className={`animeLeft ${styles.graph}`}>\n            <div className={`${styles.total} ${styles.graphItem}`}>\n                <p>Access: {total}</p>\n            </div>\n            <div className={styles.graphItem}>\n                <VictoryPie data={graph} innerRadius={50} \n                    padding={{top: 20, bottom: 20, left: 80, right: 80}}\n                    style={{\n                        data: {\n                            fillOpacity: 0.9,\n                            stroke: '#fff',\n                            strokeWidth: 2,\n                        },\n                        labels: {\n                            fontSize: 14,\n                            fill: '#333',\n                        }\n                     }}    \n                />\n            </div>\n\n            <div className={styles.graphItem}>\n                <VictoryChart>\n                    <VictoryBar alignment=\"start\" data={graph} ></VictoryBar>\n                </VictoryChart>\n            </div>\n        </section>\n    )\n}\n\nexport default UserStatsGraphs;"],"sourceRoot":""}